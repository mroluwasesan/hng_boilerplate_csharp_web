name: Generate Release JSON and Tag

on:
  push:
    branches:
      - release  # Trigger the workflow on push to the release branch

  release:
    types: [published]

jobs:
  manage_releases:
    runs-on: ubuntu-latest

    env:
      # Define paths and variables for the release JSON file
      release_file_path: new-release/release-${{ github.sha }}.json
      release_name: ${{ github.event.release.name || github.sha }}
      release_body: ${{ github.event.release.body || '' }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: release
          token: ${{ secrets.TOKEN }}
          
      - name: Create release JSON file
        env:
          release_file_dir: new-release
        run: |
          mkdir -p "$release_file_dir"
          echo "{" > "$release_file_path"
          echo "  \"title\": \"$release_name\"," >> "$release_file_path"
          echo "  \"body\": \"$release_body\"" >> "$release_file_path"
          echo "}" >> "$release_file_path"



      - name: Configure Git to use GitHub token
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Update version.json file
        run: |
          echo "{\"number\": \"${{ github.event.release.tag_name }}\", \"release_notes_url\": \"${{ env.release_notes_url }}\"}" > releases/version.json

      - name: Commit and push the release JSON to the releases directory
        run: |
          git add "$release_file_path"
          git add new-releases/version.json
          git commit -m "Add release-${{ github.event.release.tag_name }}.json"
          git push origin staging

      - name: Cleanup old releases, keep only the last 10
        run: |
          old_files=$(ls -t new-releases/release-*.json | tail -n +11)
          if [ -n "$old_files" ]; then
              echo "$old_files" | xargs -r git rm
              git commit -m "Remove old release files"
              git pull --rebase origin staging
              git push origin staging
          fi
